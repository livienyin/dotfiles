#compdef invoke

_invoke() {
    typeset -A opt_args
    local context state line

    _arguments "*:invoke_command:->command"

    case $state in
	(command)
	    COMMAND_COMPLETIONS=( $(_invoke_commands | tr '\n' ' ') )
	    for COMPLETION in $COMMAND_COMPLETIONS
	    do
		compadd $COMPLETION
	    done
	    ;;
    esac

    return 0
}

function _invoke_commands() {
    COMMAND_COMPLETIONS=( $(invoke -l |tr -d ' ' | tail -n+2 | sed '$ d' | tr '\n' ' ') )
    for COMPLETION in $COMMAND_COMPLETIONS
    do
	local comma_separated="$(echo $COMPLETION | tr -d ')\n' | tr '(' ',')"
	local names="$(_echo_split $comma_separated ',')"
	for name in $names
	do
	    echo $name
	done
    done
}

function _echo_split () {
   local IFS    
    IFS="$2" read -rA -- arr <<EOF
$1
EOF
    for i in "${arr[@]}"; do
	echo $i
    done
}
